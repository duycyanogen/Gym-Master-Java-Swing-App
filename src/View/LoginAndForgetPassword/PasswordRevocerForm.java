/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.LoginAndForgetPassword;

/**
 *
 * @author Admin
 */
import Controller.TaiKhoanCTR;
import Object.TaiKhoan;
import Processor.Encrypt;
import Processor.SendMailSSL;
import Processor.Regex;
import View.Dialog.SuccessDialog;
import java.awt.Color;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

public class PasswordRevocerForm extends javax.swing.JFrame {

    /**
     * Creates new form PasswordRevocerForm
     */
    //String TenDangNhap_PasswordPattern = "^[a-zA-Z0-9_]+$";
    //String EmailPattern = "^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$";
    Pattern TenDangNhapActivedpattern = Pattern.compile(Regex.TenDangNhap_PasswordPattern);
    Pattern EmailActivedPattern = Pattern.compile(Regex.EmailPattern);
    private static final String CHAR_LIST = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
    TaiKhoanCTR tkc = new TaiKhoanCTR();

    public PasswordRevocerForm() {
        initComponents();
        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);
    }

    private int getRandomNumber() {
        int randomInt = 0;
        Random randomGenerator = new Random();
        randomInt = randomGenerator.nextInt(CHAR_LIST.length());
        if (randomInt - 1 == -1) {
            return randomInt;
        } else {
            return randomInt - 1;
        }
    }

    public String generateRandomString() {
        StringBuffer randStr = new StringBuffer();
        for (int i = 0; i < 6; i++) {
            int number = getRandomNumber();
            char ch = CHAR_LIST.charAt(number);
            randStr.append(ch);
        }
        return randStr.toString();
    }
    boolean Complete = false;

    private void setComplete(boolean x) {
        Complete = x;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jLabelBtnSendMail = new javax.swing.JLabel();
        jLabelBtnBack = new javax.swing.JLabel();
        jLabelMain = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.0F);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEmail.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        txtEmail.setText("duyzpcm13@gmail.com");
        txtEmail.setBorder(null);
        txtEmail.setOpaque(false);
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 180, -1));
        txtEmail.setBackground(new Color(0,0,0,0));

        txtUser.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        txtUser.setText("admin");
        txtUser.setBorder(null);
        txtUser.setOpaque(false);
        getContentPane().add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, 180, -1));
        txtEmail.setBackground(new Color(0,0,0,0));

        jLabelBtnSendMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBtnSendMailMouseClicked(evt);
            }
        });
        getContentPane().add(jLabelBtnSendMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 530, 110, 40));

        jLabelBtnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBtnBackMouseClicked(evt);
            }
        });
        getContentPane().add(jLabelBtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 90, 40));

        jLabelMain.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\DoAnQuanLyGYM\\src\\View\\Image\\PasswordRecover.jpg")); // NOI18N
        getContentPane().add(jLabelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelBtnSendMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBtnSendMailMouseClicked
        Encrypt e = new Encrypt();
        String TenDN = txtUser.getText();
        String Email = txtEmail.getText();

        if (TenDN.equals("") || Email.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Empty user or email are not allowed!");
        } else if (TenDangNhapActivedpattern.matcher(txtUser.getText()).find() && EmailActivedPattern.matcher(txtEmail.getText()).find()) {
            if (tkc.ResetPassword(TenDN, Email)) {
                String newPass = generateRandomString();
                System.out.println(newPass);
                
                TaiKhoan x = new TaiKhoan(TenDN, e.encryptPassword(newPass), tkc.getData(TenDN).getLoaiTK(), tkc.getData(TenDN).getMaNV());
                //TaiKhoan y = new TaiKhoan
                if (tkc.UpdateData(x)) {

                    Waiting f = new Waiting();
                    this.setVisible(false);
                    Thread t1 = new Thread(new Runnable() {
                        @Override
                        public void run() {
                            f.setVisible(true);
                        }
                    });
                    Thread t2 = new Thread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                SendMailSSL smssl = new SendMailSSL();
                                smssl.SendMail("Your new passwprd is " + newPass, Email);
                                //System.out.println("OK");
                                f.setVisible(false);                                
                                new LoginForm().setVisible(true);
                                SuccessDialog s = new SuccessDialog("Your new password was successfully sent to " + Email);
                                s.setVisible(true);
                                //JOptionPane.showMessageDialog(rootPane, "Mật khẩu mới của bạn đã được gửi về email " + Email + ", vui lòng kiểm tra email để lấy lại mật khẩu");
                            } catch (Exception e) {
                                f.setVisible(false);
                                JOptionPane.showMessageDialog(rootPane, "Failed, no internet connection!");
                            }

                        }
                    });
                    t1.start();
                    t2.start();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Failed!");
                };

            } else {
                JOptionPane.showMessageDialog(rootPane, "Incorrect username or email!");
            }
        } else
            JOptionPane.showMessageDialog(null, "String does not match regex");
        System.out.println(txtEmail.getText());
        System.out.println(TenDangNhapActivedpattern);
        System.out.println(txtUser.getText());
        System.out.println(EmailActivedPattern);
    }//GEN-LAST:event_jLabelBtnSendMailMouseClicked

    private void jLabelBtnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBtnBackMouseClicked
        // TODO add your handling code here:
        for (double i = 1.0; i >= 0; i -= 0.1) {
            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
                Logger.getLogger(PasswordRevocerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        LoginForm f = new LoginForm();
        f.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabelBtnBackMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.0; i <= 1; i += 0.1) {
            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
                Logger.getLogger(PasswordRevocerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PasswordRevocerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PasswordRevocerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PasswordRevocerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PasswordRevocerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PasswordRevocerForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBtnBack;
    private javax.swing.JLabel jLabelBtnSendMail;
    private javax.swing.JLabel jLabelMain;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
